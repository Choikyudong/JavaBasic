package level_01.java_chap02;

// 자바와 배열 - 2

import java.util.Arrays;

public class Chap_02 {

    // 배열은 하나로 그냥 넘어갈려고 했는데
    // 배열을 이용해서 조금 알고리즘(?)을 풀어보자
    public static void main(String[] args) {
        /*앞에서 말한것처럼 배열을 통해서 다양한 알고리즘을 풀 수 있다*/

        /*앞에서는 언급을 안했지만 배열을 생성과 동시에 값을 넣는 방법이 있는데 그렇게 생성을 해보자*/
        // 타입[]  배열이름 = {값, 값, 값, ....}; <- 세미콜론 꼭
            int[] testArray = {1,2,3,4,5};

        /*이렇게하면 배열길이 5를 가지며 값도 모두 들어있다.*/
        for (int i : testArray) {
            System.out.println(i);
        }
        
        /*해당 배열에서 가장 큰 숫자는 5인걸 모르는 사람은 별로 없을것이다.*/
        /*그럼 프로그램에서 해당 배열에서 가장 큰 숫자만 출력해보자*/
        
        /*다양한 방법 중 하나의 방법이다.*/
        int max = testArray[0]; // 우선 크기와 상관없이 기준을 잡는데 배열의 첫번째를 기준으로 잡자
        for (int i = 1; i < testArray.length; i++) { // 배열 첫번째를 기준으로 비교를 할꺼니 1부터 시작
            if (max < testArray[i]) { // 만약 max값이 다음배열보다 작다면
                max = testArray[i]; // 최대값을 큰값으로 교체
            }
        }
        System.out.println("가장큰숫자는 : " + max);

        /*조금 더 나아가서 "버블소트"알고리즘을 만들어보자*/
        /*가장 기초적인 "정렬"알고리즘으로 알아두면 요긴하게 쓸 수 있다.*/

        // 순서가 뒤죽박죽인 배열이 있다. 해당 배열을 -> 오름차순으로 정렬을 해보자
        int[] myArray = {6,1,4,9,3}; // 예상도는 1 3 4 6 9 이다

        for (int i = 0; i < myArray.length; i++) {
            for (int j = 0; j < myArray.length - i - 1; j++) { // 배열길이는 조금씩 감소시켜 정렬을 하면 완료가 된다.
                if (myArray[j] > myArray[j + 1]) { // 현재 칸의 값을 각 배열의 값마다 비교를 한다.
                    int box = myArray[j]; // 작업용 변수 box를 만들어서 옮겨야하는 값을 임시로 옮긴다.
                    myArray[j] = myArray[j + 1]; // 작은값은 앞으로 옮기고
                    myArray[j + 1] = box; // 더 큰값은 뒤로 옮긴다.
                }
            }
        }

        /*정렬이 제대로 된건지 확인을 해보자*/
        for (int i : myArray) {
            System.out.print(i + " ");
        }

        /*다차원 배열*/
        /*또한 배열을 조금 더 다채롭게 생성도 할 수 있다.*/
        /*위에까지 배운 배열은 1차원 배열이다. 이 말은 2차원, 3차원 그 이상의 배열도 가능하다는 말이다.*/
        //배열타입[][]   배열이름   =    new 배열타입[][]
            int[][]     myArrArr    =    new int[3][3];

        /*3 * 3의 크기를 가진 배열을 이렇게 생성할 수 있다.*/
        /*해당 배열에 값을 이렇게 넣을 수 있다.*/
        myArrArr[0][1] = 5;
        myArrArr[2][2] = 4;

        /*사실 보기만해도 어질어질한게 다차원배열이다*/
        /*다차원배열도 이렇게 값을 입력할 수 있다.*/
        int[][] arrArr = {{1, 2, 3}, {4,5,6}, {7, 8, 9}};

        /*보기만해도 어지럽다*/
        /*해당 배열을 출력을 해보자*/
        for (int i = 0; i < arrArr.length; i++) {
            for (int j = 0; j < arrArr.length; j++) {
                System.out.println(i + "값," + j + "값");
            }
        }
        /*기존 배열보다 출력만봐도 복잡해졌다는걸 알 수 있다. 하지만 그만큼 데이터도 다채롭게 넣을 수 있다.*/

        /*여기에 입력된 배열과 다차원배열은 활용도가 무궁무진하며 여기에 입력되지않은 다양한 기법과 기본들이 있다.*/
    }
}
