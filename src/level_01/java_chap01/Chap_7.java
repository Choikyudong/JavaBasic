package level_01.java_chap01;

// 자바와 for

public class Chap_7 {

    // if 와 함께 가장많이 사용하는 문법인 for
    // for 는 "반복문"으로 사용방법만 익히면 쉽고 유용하다
    public static void main(String[] args) {
        /*for의 사용방법은 아래와 같다.*/
        // (초기값; 종료지점; 증가값)
        for (int i = 1; i <= 10; i++) { // 1의 값을 가진 i가 10이 될때까지 1씩 증가하는 문장이다.
            System.out.println(i); // 초기값 1부터 종료지점 10까지 출력이 되는걸 확인할 수 있다.
        }
        /* for문은 초기값이 종료지점에 해당하지 않으면 내부에 존재하는 코드를 실행하고
          증가값에 따라서 값이 증가한다, 해당 반복을 종료지점까지 계속 실행한다 */

        /*그래서 for문을 반복문이라고 많이 부른다.*/
        for (int i = 10; i > 0; i--) { // 이번에는 i값을 10으로 잡고 0보다 작을 때 까지 수가 감소하는 반복문이다.
            System.out.println(i);
        }

        /*조금 더 응용하면 이렇게도 가능하다*/
        int i;
        int j;
        for (i = 1, j = 10; i <= j; i++, j--) { // ","를 이용해서 초기값과, 증가값을 추가할 수 있다.
            System.out.println("a = " + i); // "+"로 값을 붙여서 출력할 수 있다.
            System.out.println("b = " + j);
        }
        
        /*for와 if문을 같이 사용할 수 있다.*/
        for (int k = 0; k < 10; k++) {
            if (k == 5) { // k가 5일떄 한번 출력해보자
                System.out.println("for안에 if를 사용해서 알고리즘을 많이 하기도 한다.");
            }
        }

        /*이중 for문*/
        // 말그대로 for문안에 또 for문을 입력하는 것이다.
        // 처음에는 순서가 헷갈릴 수 있다.
        for (int k = 0; k < 10; k++) { // 1번
            for (int l = 0; l < 3; l++) { // 2번
                System.out.println("l = " + l); // 3번
            }
            System.out.println("k = " + k); // 4번
        }
        // 1번이 실행이 되고 참이므로 2번이 실행이된다.
        // 2번이 실행이 되고 참이므로 3번이 실행이된다.
        // 3번이 실행이 되고 여전히 2번의 조건이 참이므로 다시 3번이 실행이 된다.
        // 2번의 조건이 거짓이 되면 4번이 실행이 된다.
        // 위와같은 4번의 순서를 1번의 조건이 거짓이 될때까지 계속 반복한다.

        /*기본적인 알고리즘들을 풀거나 학습을 할 때 이중 for문을 생각보다 많이 쓰니까 익숙해지면 좋다.*/

        /*반복문 제어*/
        /*2가지가 존재하는데 break, continue가 있다*/
        /*중요한점은 "반복문"제어라는 것이다. 즉 for말고 다른 문법에서도 가능하다는 말이다.*/
        /* break는 반복문을 종료시킬 수 있다.*/
        for (int k = 0; k < 100; k++) { // 100까지 출력은 싫고 10에서 멈추고 싶을 때 이렇게 해보자
            System.out.println("k의 값 : " + k);
            if (k == 10) {
                System.out.println("10에서 멈추자");
                break; // break 키워드로 해당 for문을 이렇게 끝낼 수 있다
            }
        }
        
        /*continue는 이렇게 사용해보자*/
        for (int k = 0; k < 12; k++) {
            System.out.println("k의 값 : " + k);
            if (k == 10) {
                System.out.println("11까지 보고싶어");
                continue; // 이렇게 사용하게되면 밑의 구문을 무시하고 바로 for문의 첫줄로 돌아간다.
                //break;
            }
        }

        /*그리고 더 나아가서 "향상된 for문"이라고 불리는 "for each"도 있다*/
        /*하지만 해당 문법은 "배열/컬렉션"에 특화된 기능이다.*/
        /*그래서 해당 문법은 배열파트에서 보는게 좋다고 생각한다.*/
        /*
        for (타입값 : 배열) {
            코드
        }
        */
    }

}
