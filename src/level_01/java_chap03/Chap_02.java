package level_01.java_chap03;

// 클래스와 객체

public class Chap_02 {

    // java_chap01의 Chap_2에서 클래스의 사용방법을 언급한적있다.
    // 이번에는 클래스에 대해서 조금 더 이야기를 해야한다.
    public static void main(String[] args) {
        /*앞의 내용을 보고 Chap_2에서 클래스를 보면 헷갈릴 것이다.*/
        /*순서를 생각없이 정해서 일어난 일이고 이제는 개념을 확실히 잡고 가야한다.*/

        /*우선 class와 객체 그리고 인스턴스는 같지만 다른 개념이다.*/
        /*이게 무슨 소리냐라고 할 수 있지만 정말이다.*/

        /*우선 class는 객체를 정의를 해둔 것이다.*/
        /*밑의 Person 클래스를 기준으로 살펴보면*/

        /*해당 클래스는 Person(사람)을 정의를 해둔 "클래스"이다.*/
        class Person {}

        /*그렇다면 이제 홍길동이라는 "사람"을 위의 클래스로 구현을 할려고 하는데*/
        /*보다시피 class는 그 자체로 사용을 하지 못한다. 즉 클래스를 사용을 할려면 "객체"로 만들어야 한다.*/

        /*다시 class에 대해서 정리를 하면*/
        /*class는 객체를 생성하고 정의를 하기 위한 용도이다.*/

        /*그렇다면 이제 Person클래스를 통해서 홍길동이라는 사람을 만들고 싶다면 이렇게 하는 것은 알고있을 것이다.*/
        Person 홍길동 = new Person(); // new 키워드는 말그대로 새로운것을 만들어 낸다는 말이다.

        /*이렇게하면 홍길동이라는 객체가 만들어진다.*/
        /*여기서 정말 주의깊게 잘 이해를 해야하는 부분인데*/
        /*객체와 인스턴스는 우선 같은 의미이기는 하다. 하지만 객체는 모든 인스턴스를 대표하는 포괄적인 의미를 지녔다.*/
        /*"Person 홍길동 = new Person();" 해당 부분은 클래스를 인스턴스화라고 이해를 하면 좋다.*/

        /*즉 "홍길동은 Person클래스의 인스턴스다"라고 표현을 하는것이 조금 더 정확한 표현이다.*/

        /*조금 더 파고들어가면*/
        /*저번에 배열을 배울 때에 System.out.println()으로 출력을 할 때*/
        /*이상한 외계어가 출력이 된 적이 있다, 기본형은 그냥 출력이 잘되는데 신기한 일이다.*/

        /*배열, String, Person 모두 new 키워드로 생성을 한다는 것을 알 수 있는데*/
        /*new 키워드로 생성을 하게되면 일반적인 타입처럼 변수명으로 사용이 되는것이 아닌*/
        /*"참조변수"라고 실제 String이 생성된 위치, Person의 위치, 실제의 값을 가져오는 것이 아닌*/
        /*해당 위치의 값을 참조하는 시스템입니다. (reference(참조)라는 영어를 엄청 많이 보게 될것입니다.)*/

        /*정리를 하면*/
        /*클래스는 객체를 생성하기 위한 틀이며*/
        /*클래스란 틀을 통해서 생성되는 물건이 인스턴스*/
        /*생성되는 과정을 인스턴스화*/
        /*인스턴스는 해당 객체의 실제값이 아닌 주소값을 가지고 있다.*/

        /*사실 객체지향개념부터 많이 어렵고 아직 많이 헷갈리기도 하는데*/
        /*그럴때는 오히려 마음을 비우고 여러번 보는것이 더 도움이 된다.*/

    }
}
