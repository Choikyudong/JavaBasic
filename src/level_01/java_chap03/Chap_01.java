package level_01.java_chap03;

// 자바와 객체

/*java_chap01의 Chap_2에서 "클래스"라는 것을 간단하게 다뤘는데*/
/*사실 이전까지만 알면 알고리즘문제도 어느정도 풀 수 있지만 자바라는 언어를 다루기 위해서는 객체를 알아야한다.*/
/*이제부터는 본격적으로 클래스, 즉 객체를 활용해서 자바의 특징인*/
/*OOP(Object Oriented Programming)를 본격적으로 알아본다.*/
public class Chap_01 {

    /*해당 챕터부터는 앞에서까지 다뤘던 내용들과는 완전히 다르다*/
    /*앞에서까지 다뤘던 내용들은 문법이 조금씩 다를 뿐 프로그래밍의 기본적인 특징들이다.*/
    public static void main(String[] args) {

        /*우선 앞에서 다뤘던 내용들은 기본적으로 변수를 이용해서 간단한 자료를 담거나*/
        /*배열을 이용해서 같은 자료형을 많이 담는 등 기본적으로 자료를 원시적으로 다루는 행동이였다.*/

        /*이번 챕터에서는 문법보다는 왜 만드는지 어떻게 만드는지에 대해서 집중적으로 봐야한다.*/

        /*예를들어 홍길동이란 사람이 존재한다고 가정을 한다면 이렇게 말을 할 수 있다.*/
        /*이름 : 홍길동, 나이 : 20살, 성별 : 남자*/
        /*위에처럼 이런식으로 홍길동이란 사람에대한 정보를 요약할 수 있다.*/

        /*그리고 최규동이란 사람이 존재한다고 가정을 한다면 이렇게 말을 할 수 있다.*/
        /*이름 : 최규동, 나이 : 200살, 성별 : 남자*/
        /*이렇게 최규동이라는 사람에대한 정보를 요약할 수 있다.*/

        /*이렇게 현실에 존재하는 모든 대상(사물이든 사람이든 상관없다)을 "객체"라고 정의를 하고*/
        /*코드로 구현을 하여 사용하는것이 객체지향이다.*/

        /*그러면 공통점을 기반으로 밑에서 "객체"를 만들고 사용해보자*/
        Person 홍길동 = new Person(); // 홍길동은 사람이므로 사람형태로 만들어진 데이터 틀에 넣어서 만든다.
        Person 최규동 = new Person(); // 마찬가지로 사람이므로 이렇게 사용한다.
        
        // 이제 위에 입력된 데이터들을 입력을 하자
        홍길동.name = "홍길동";
        홍길동.age = 20;
        홍길동.gender = 'M';

        // 최규동이라는 사람의 값도 넣어주자.
        최규동.name = "최규동";
        최규동.age = 200;
        최규동.gender = 'M';

        // 마지막으로 확인을 하자
        System.out.println(홍길동.name);
        System.out.println(홍길동.age);
        System.out.println(홍길동.gender);

        System.out.println(최규동.name);
        System.out.println(최규동.age);
        System.out.println(최규동.gender);

        /*이제 해당 프로그램에서 사람을 저장해야한다면 Person객체에 맞는 형태로 값을 넣어주면 된다.*/
        /*이렇게 제작을 하게된다면 객체지향언어인 자바에서 주요특징을 지키면서 만들 수 있다.*/

        /*1. 코드의 재사용성을 높인다.*/
        /*이제 어떤 사람의 데이터를 넣는다해도 해당 객체를 이용하면 되니 재사용성이 높다.*/

        /*2. 코드이 관리가 용이하다.*/
        /*사람신상정보에 휴대폰번호가 필요하다면 휴대폰번호만 추가하면 되니까 관리가 편한다.*/

        /*3. 신뢰성이 높은 프로그래밍*/
        /*지금은 구체적으로 다루지 않았지만 상속, 인터페이스 등으로 코드 중복 제거등으로*/
        /*올바른값이 들어오도록 유지하는등 올바른 프로그래밍이 제작이 가능해진다.*/

        /*이 외에도 객체지향의 특징들은 다양하지만 3가지가 가장 큰 특징이라고 생각한다.*/


        /*사실 이번챕터에서는 코드를 주로 입력하기보다는 왜 객체를 만들어야 하는지에 대해서 이해를 하는 시간을 가졌다.*/
        /*초기에 객체지향을 배울때 그냥 사용방법만 알고 아무생각없이 사용을 했는데 지금 생각을 해보면*/
        /*사용방법을 익히는 방법도 중요하지만 결국 왜 사용을 하냐가 가장 중요한거 같다.*/

        /*끝으로 다시 정리를 하면 객체는 현실에 존재하는 어떤것을 코드상으로 구현을 하는 것이다.*/
        /*어떤것이란 동물, 사람, 물건 아무거나 좋다. 공기를 객체로 잡아도 아무상관없다.*/
        /*대신 정한 대상을 객체에 모두가 이해할 수 있게 정의를 해두면 된다.*/

    }


}

// 본격적으로 홍길동과 최규동이라는 2명의 사람을 데이터로 옮기는데

// 내가 생각하는 2명의 공통점은 우선 "사람"이다.
class Person { // 그래서 이렇게 사람이라는 이름으로 객체를 만든다.

    // 그리고 사람에 대해서 3개의 구체적인 정보를 만든다.
    // 여기서 사용된 데이터타입들은 해당 객체 제작자가 마음대로 정해도 된다.
    String name; // 이름은 "문자열"이므로 String타입으로 만들어준다.
    int age; // 나이는 숫자이니 무난한 int타입으로 간다.(다른 타입을 써도 상관이 없다.)
    char gender; // 성별을 char타입으로 M(MEN), W(WOMEN) 이렇게 표현을 해보았다.

}

